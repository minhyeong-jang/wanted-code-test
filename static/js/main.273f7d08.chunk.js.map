{"version":3,"sources":["redux.js","App/Buttons.js","App/List/DetailModal.js","App/List/index.js","App/index.js","index.js"],"names":["updateDogs","data","type","updateLoading","initialState","dogs","isLoading","applyupdateDogs","state","action","Object","assign","concat","toConsumableArray","applyClearDogs","applyUpdateLoading","reducer","arguments","length","undefined","Button","styled","button","_templateObject","Buttons","_handleGetDog","_callee","result","regenerator_default","a","wrap","_context","prev","next","_this","props","axios","get","sent","stop","_handleClearDog","alert","clearDogs","window","scrollTo","_this2","this","react_default","createElement","onClick","Component","connect","dispatch","params","Modal","div","DetailModal_templateObject","Body","_templateObject2","Header","_templateObject3","_templateObject4","Background","_templateObject5","DetailModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextProps","visible","body","focus","_this$props","onClose","style","display","ref","onKeyDown","e","keyCode","tabIndex","src","alt","DetailModal_Button","Info","List_templateObject","Card","List_templateObject2","EmptyCard","List_templateObject3","Container","List_templateObject4","List","asyncToGenerator","mark","scrollPercent","scrollPercentRounded","scrollY","document","scrollHeight","innerHeight","Math","round","initLoad","detail","history","scrollRestoration","addEventListener","lib_default","className","elementType","options","transitionDuration","onImagesLoaded","setState","map","dog","index","key","List_DetailModal","App","App_Buttons","App_List","store","createStore","redux","ReactDOM","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.273f7d08.chunk.js","sourcesContent":["const GET_DOGS = \"GET_DOGS\";\nconst CLEAR_DOGS = \"CLEAR_DOGS\";\nconst UPDATE_LOADING = \"UPDATE_LOADING\";\n\n// Action\nexport const updateDogs = data => ({\n  type: GET_DOGS,\n  data\n});\nexport const clearDogs = data => ({\n  type: CLEAR_DOGS,\n  data\n});\nexport const updateLoading = data => ({\n  type: UPDATE_LOADING,\n  data\n});\n\n// Reducer\nconst initialState = {\n  dogs: [],\n  isLoading: false\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return applyupdateDogs(state, action);\n    case CLEAR_DOGS:\n      return applyClearDogs(state);\n    case UPDATE_LOADING:\n      return applyUpdateLoading(state, action);\n    default:\n      return state;\n  }\n};\n\n// Reducer Functions\nconst applyupdateDogs = (state, action) => {\n  return Object.assign({}, state, {\n    dogs: [...state.dogs, ...action.data]\n  });\n};\nconst applyClearDogs = state => {\n  return Object.assign({}, state, {\n    dogs: []\n  });\n};\nconst applyUpdateLoading = (state, action) => {\n  return Object.assign({}, state, {\n    isLoading: action.data\n  });\n};\n\n// Export\nexport default reducer;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nimport { updateDogs, clearDogs, updateLoading } from \"../redux\";\n\nconst Button = styled.button`\n  outline: none;\n  cursor: pointer;\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 4px;\n  background-color: white;\n  border: 1px solid #dedede;\n  margin-top: 10px;\n  width: 150px;\n  &:first-child {\n    margin-right: 5px;\n  }\n  &:hover {\n    color: #1890ff;\n    border-color: #1890ff;\n  }\n  &:active {\n    opacity: 0.6;\n  }\n`;\n\nclass Buttons extends Component {\n  // 시바견 업데이트\n  _handleGetDog = async () => {\n    this.props.updateLoading(true);\n    const result = await axios.get(\"./data.json\");\n    this.props.updateDogs(result.data);\n  };\n  // 시바견 리스트 초기화\n  _handleClearDog = () => {\n    if (this.props.isLoading) {\n      alert(\"이미지 준비중입니다.\");\n      return false;\n    }\n    this.props.clearDogs([]);\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={() => this._handleGetDog()}>GET DOGS</Button>\n        <Button onClick={() => this._handleClearDog()}>CLEAR DOGS</Button>\n      </div>\n    );\n  }\n}\n\nButtons.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  updateLoading: PropTypes.func.isRequired,\n  updateDogs: PropTypes.func.isRequired,\n  clearDogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading\n});\nconst mapDispatchToProps = dispatch => ({\n  updateLoading: params => dispatch(updateLoading(params)),\n  updateDogs: params => dispatch(updateDogs(params)),\n  clearDogs: params => dispatch(clearDogs(params))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Buttons);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Modal = styled.div``;\nconst Body = styled.div`\n  position: fixed;\n  top: 5vh;\n  left: 50%;\n  transform: translateX(-50%);\n  overflow: hidden;\n  border-radius: 10px;\n  z-index: 10;\n  background-color: white;\n  outline: none;\n  img {\n    display: block;\n    max-height: 80vh;\n    max-width: 100%;\n  }\n`;\nconst Header = styled.div`\n  padding: 10px 20px;\n  font-size: 15px;\n  font-weight: bold;\n`;\nconst Button = styled.button`\n  display: block;\n  outline: none;\n  cursor: pointer;\n  background-color: white;\n  border: 1px solid #dedede;\n  padding: 10px 15px;\n  border-radius: 4px;\n  margin: 5px auto;\n`;\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nclass DetailModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.visible === this.props.visible) return false;\n    return true;\n  }\n  componentDidUpdate() {\n    this.body.focus();\n  }\n  render() {\n    const { visible, onClose, data } = this.props;\n    return (\n      <Modal style={{ display: visible ? null : \"none\" }}>\n        <Body\n          ref={ref => (this.body = ref)}\n          onKeyDown={e => (e.keyCode === 27 ? onClose() : null)}\n          tabIndex={0}\n        >\n          <Header>이름 모를 시바</Header>\n          <img src={data} alt=\"강아지 상세보기\" />\n          <Button onClick={onClose}>닫기</Button>\n        </Body>\n        <Background onClick={onClose} />\n      </Modal>\n    );\n  }\n}\n\nDetailModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  data: PropTypes.string\n};\n\nexport default DetailModal;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport Masonry from \"react-masonry-component\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nimport DetailModal from \"./DetailModal\";\nimport { updateDogs, updateLoading } from \"../../redux\";\n\nconst Info = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-width: 200px;\n  word-break: keep-all;\n  border: 1px solid #dedede;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 12px;\n`;\nconst Card = styled.div`\n  width: 100%;\n  margin: 10px 0px;\n  border-radius: 10px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n  box-shadow: 0 8px 38px rgba(133, 133, 133, 0.3),\n    0 5px 12px rgba(133, 133, 133, 0.22);\n  img {\n    display: block;\n    width: 100%;\n  }\n  @media screen and (min-width: 768px) {\n    width: calc(25% - 10px);\n    margin: 5px;\n  }\n`;\nconst EmptyCard = styled(Card)`\n  height: 200px;\n  line-height: 200px;\n  color: #999;\n  background-color: #f2f2f2;\n`;\nconst Container = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n  padding: 10px;\n  ul {\n    padding: 0;\n    margin: 0;\n    &.show {\n      animation: fadein 1s;\n    }\n    &.hide {\n      ${Card} {\n        &:not(.emptyCard) {\n          display: none;\n        }\n      }\n    }\n  }\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initLoad: true,\n      detail: {\n        visible: false,\n        data: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.history.scrollRestoration = \"manual\";\n    window.addEventListener(\"scroll\", this._handleGetDog);\n  }\n\n  _handleGetDog = async () => {\n    const scrollPercent =\n      window.scrollY / (document.body.scrollHeight - window.innerHeight);\n    const scrollPercentRounded = Math.round(scrollPercent * 100);\n    if (!this.props.isLoading && scrollPercentRounded >= 95) {\n      this.props.updateLoading(true);\n      const result = await axios.get(\"./data.json\");\n      this.props.updateDogs(result.data);\n    }\n  };\n  render() {\n    const { dogs, isLoading } = this.props;\n    return (\n      <Container>\n        {!dogs.length && !isLoading ? (\n          <Info>스크롤을 내리거나 GET DOGS 버튼을 클릭해주세요</Info>\n        ) : null}\n        <Masonry\n          className={this.state.initLoad && isLoading ? \"hide\" : \"show\"}\n          elementType={\"ul\"}\n          options={{ transitionDuration: 0 }}\n          onImagesLoaded={() => {\n            if (isLoading) {\n              this.props.updateLoading(false);\n              this.setState({ initLoad: false });\n            }\n          }}\n        >\n          {dogs.map((dog, index) => (\n            <Card\n              key={index}\n              onClick={() =>\n                this.setState({ detail: { visible: true, data: dog } })\n              }\n            >\n              <img src={dog} alt={dog} />\n            </Card>\n          ))}\n          {isLoading ? (\n            <EmptyCard className=\"emptyCard\">이미지 준비중입니다.</EmptyCard>\n          ) : null}\n        </Masonry>\n        <DetailModal\n          data={this.state.detail.data}\n          visible={this.state.detail.visible}\n          onClose={() => this.setState({ detail: { visible: false } })}\n        />\n      </Container>\n    );\n  }\n}\n\nList.propTypes = {\n  dogs: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  updateLoading: PropTypes.func.isRequired,\n  updateDogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  dogs: state.dogs,\n  isLoading: state.isLoading\n});\nconst mapDispatchToProps = dispatch => ({\n  updateDogs: params => dispatch(updateDogs(params)),\n  updateLoading: params => dispatch(updateLoading(params))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List);\n","import React, { Component } from 'react';\n\nimport './index.scss';\nimport Buttons from './Buttons';\nimport List from './List';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>wanted-<code>CODE</code>-test</h3>\n        </header>\n        <Buttons />\n        <List />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport './index.scss';\nimport App from './App';\nimport redux from './redux';\n\nconst store = createStore(redux);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}